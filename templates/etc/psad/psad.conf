#
##############################################################################
#
#  This is the configuration file for psad (the Port Scan Attack Detector).
#  Normally this file gets installed at /etc/psad/psad.conf, but can be put
#  anywhere in the filesystem and then the path can be specified on the
#  command line argument "-c <file>" to psad.  All three psad daemons (psad,
#  kmsgsd, and psadwatchd) reference this config file.  Note that kmsgsd is
#  generally deprecated since by default psad parses iptables log messages
#  directly from the file where syslog writes them.  Further, psadwatchd is
#  not required if running on a Linux system that already has a process
#  monitoring and restarting capability built-in such as provided by the
#  upstart daemon.
#
#  Each line has the form  "<variable name>    <value>;".  Note the semi-
#  colon after the <value>.  All characters after the semicolon will be
#  ignored to provide space for comments.
#
##############################################################################
#

### Supports multiple email addresses (as a comma separated
### list).
EMAIL_ADDRESSES             {{ psad_email_addresses }};

### Machine hostname
HOSTNAME                    {{ ansible_hostname }};

### Specify the home and external networks.  Note that by default the
### ENABLE_INTF_LOCAL_NETS is enabled, so psad automatically detects
### all of the directly connected subnets and uses this information as
### the HOME_NET variable.
HOME_NET                    {{ psad_home_net }};
EXTERNAL_NET                {{ psad_external_net }};

### The FW_SEARCH_ALL variable controls how psad will parse iptables
### messages.  If it is set to "Y" then psad will parse all iptables
### messages for evidence of scan activity.  If it is set to "N" then
### psad will only parse those iptables messages that contain logging
### prefixes specified by the FW_MSG_SEARCH variable below.  Logging
### prefixes are set with the --log-prefix command line option to iptables.
### Setting FW_SEARCH_ALL to "N" is useful for having psad only analyze
### iptables messages that are logged out of a specific iptables chain
### (multiple strings can be searched for, see the comment above the
### FW_MSG_SEARCH variable below) or a specific logging rule for example.
### FW_SEARCH_ALL is set to "Y" by default since usually people want psad
### to parse all iptables messages.
FW_SEARCH_ALL               {{ psad_fw_search_all }};

### The FW_MSG_SEARCH variable can be modified to look for logging messages
### that are specific to your firewall configuration (specified by the
### "--log-prefix" option.  For example, if your firewall uses the
### string "Audit" for packets that have been blocked, then you could
### set FW_MSG_SEARCH to "Audit";  The default string to search for is
### "DROP".  Both psad and kmsgsd reference this file.  NOTE: You can
### specify this variable multiple times to have psad search for multiple
### strings.  For example to have psad search for the strings "Audit" and
### "Reject", you would use the following two lines:
#FW_MSG_SEARCH               Audit;
#FW_MSG_SEARCH               REJECT;
FW_MSG_SEARCH               {{ psad_fw_msg_search }};

### What type of interface configuration do you use?  Set this variable to
### "iproute2" if you want to use the iproute2 type configuration.
### iproute2 does not use aliases for multi-homed interfaces and
### ifconfig does not show secondary addresses for multi-homed interfaces.
#IFCFGTYPE  iproute2;
IFCFGTYPE                   {{ psad_ifcfgtype }};

### Danger levels.  These represent the total number of
### packets required for a scan to reach each danger level.
### A scan may also reach a danger level if the scan trips
### a signature or if the scanning ip is listed in
### auto_ips so a danger level is automatically
### assigned.
DANGER_LEVEL1               {{ psad_danger_level1 }};    ### Number of packets.
DANGER_LEVEL2               {{ psad_danger_level2 }};
DANGER_LEVEL3               {{ psad_danger_level3 }};
DANGER_LEVEL4               {{ psad_danger_level4 }};
DANGER_LEVEL5               {{ psad_danger_level5 }};

### Set the interval (in seconds) psad will use to sleep before
### checking for new iptables log messages
CHECK_INTERVAL              {{ psad_check_interval }};

### Search for snort "sid" values generated by fwsnort
### or snort2iptables
SNORT_SID_STR               {{ psad_snort_sid_str }};

### Set the minimum range of ports that must be scanned before
### psad will send an alert.  The default is 1 so that at
### least two port must be scanned (p2-p1 >= 1).  This can be set
### to 0 if you want psad to be extra paranoid, or 30000 if not.
PORT_RANGE_SCAN_THRESHOLD   {{ psad_port_range_scan_threshold }};

### For IP protocol scan detection (nmap -sO).  While it may be relatively
### common for a host to trigger on tcp, udp, and icmp, it is more unusual if
### a host triggers on, say, five different IP protocols
PROTOCOL_SCAN_THRESHOLD     {{ psad_protocol_scan_threshold }};

### If "Y", means that scans will never timeout.  This is useful
### for catching scans that take place over long periods of time
### where the attacker is trying to slip beneath the IDS thresholds.
ENABLE_PERSISTENCE          {{ psad_enable_persistence }};

### This is used only if ENABLE_PERSISTENCE = "N";
SCAN_TIMEOUT                {{ psad_scan_timeout }};  ### seconds

### Specify how often to timeout old scan data relative to CHECK_INTERVAL
### iterations.  This feature is only used if ENABLE_PERSISTENCE is disabled.
### Note that for psad processes that have tracked a lot of scans, it is
### advisable to leave this threshold at the default value of 5 or greater
### because the scan tracking hash may be quite large.
PERSISTENCE_CTR_THRESHOLD   {{ psad_persistence_ctr_threshold }};

### Limit the number of src->dst IP pairs that psad will track.  The default
### is zero (i.e. unlimited), but if psad is running on a system with limited
### memory, this can be handy to restrict psad's memory usage.  It is best to
### combine this option with disabling ENABLE_PERSISTENCE so that older scans
### are deleted and therefore newer scans will on average continue to be
### tracked.  A good non-zero value is, say, 50000, but this will vary
### depending on available system memory.
MAX_SCAN_IP_PAIRS           {{ psad_max_scan_ip_pairs }};

### If "Y", means all signatures will be shown since
### the scan started instead of just the current ones.
SHOW_ALL_SIGNATURES         {{ psad_show_all_signatures }};

### Allow reporting methods to be enabled/restricted.  This keyword can
### accept values of "nosyslog" (don't write any messages to syslog),
### "noemail" (don't send any email messages), or "ALL" (to generate both
### syslog and email messages).  "ALL" is the default.  Both "nosyslog"
### and "noemail" can be combined with a comma to disable all logging
### and alerting.
ALERTING_METHODS            {{ psad_alerting_methods }};

### By default, psad checks for journalctl on systems where systemd is
### installed. If journalctl is running, then psad will automatically acquire
### syslog data from journalctl instead of parsing a file in the /var/log/
### directory.
AUTO_DETECT_JOURNALCTL      {{ psad_auto_detect_journalctl }};

### The following vars have psad acquire iptables log data from the
### /var/log/messages file which the local syslog daemon (usually) writes
### iptables log messages to.  If the ENABLE_SYSLOG_FILE variable below is set
### to "N", then psad reconfigures syslog to write iptables log data to the
### /var/lib/psad/psadfifo fifo file where the messages are picked up by kmsgsd
### written to the file /var/log/psad/fwdata for analysis by psad.  On some
### systems, having syslog communicate log data to kmsgsd can be problematic
### (syslog configs and external factors such as Apparmor and SELinux can play
### a role here), so leaving the ENABLE_SYSLOG_FILE variable set to "Y" is
### usually recommended. However, if psad is running on a system where systemd
### is installed and syslog messages are accessed via journalctl instead of
### being written to the filesystem, then the ENABLE_FW_MSG_READ_CMD
### functionality should be used to take over (see below).
ENABLE_SYSLOG_FILE          {{ psad_enable_syslog_file }};
IPT_WRITE_FWDATA            {{ psad_ipt_write_fwdata }};
IPT_SYSLOG_FILE             {{ psad_ipt_syslog_file }};

### Set the type of syslog daemon that is used.  The SYSLOG_DAEMON
### variable accepts four possible values: syslogd, syslog-ng, ulogd,
### or metalog.  Note: this variable is only used if ENABLE_SYSLOG_FILE is
### disabled, and this in turn will mean that the legacy kmsgsd daemon will
### collect firewall logs from syslog via the old named pipe mechanism.
SYSLOG_DAEMON               {{ psad_syslog_daemon }};

### This is primarily used to acquire syslog messages from journalctl on
### systems where systemd is running.
ENABLE_FW_MSG_READ_CMD      {{ psad_enable_fw_msg_read_cmd }};
FW_MSG_READ_CMD             {{ psad_fw_msg_read_cmd }};
FW_MSG_READ_CMD_ARGS        {{ psad_fw_msg_read_cmd_args }};
USE_FW_MSG_READ_CMD_ARGS    {{ psad_use_fw_msg_read_cmd_args }};
FW_MSG_READ_MIN_PKTS        {{ psad_fw_msg_read_min_pkts }};

### When enabled, this instructs psad to write the "msg" field
### associated with Snort rule matches to syslog.
ENABLE_SIG_MSG_SYSLOG       {{ psad_enable_sig_msg_syslog }};
SIG_MSG_SYSLOG_THRESHOLD    {{ psad_sig_msg_syslog_threshold }};
SIG_SID_SYSLOG_THRESHOLD    {{ psad_sig_sid_syslog_threshold }};

### For systems with an init daemon like 'upstart' that offer built-in process
### monitoring, it is not necessary to run the psadwatchd daemon, and this is
### the default.
ENABLE_PSADWATCHD           {{ psad_enable_psadwatchd }};

### Expect that all logged TCP SYN packets include the options portion of the
### TCP header (requires the --log-tcp-options argument to the iptables LOG
### rule).  If a SYN packet is received that does not include TCP options, then
### it may be created by a scanner such as Eratta Security's "masscan").  Note
### that psad still does a check to see if at least one log message is seen
### includes the OPT field before expecting the remaining messages to also
### include this field.
EXPECT_TCP_OPTIONS          {{ psad_expect_tcp_options }};

### TTL values are decremented depending on the number of hops
### the packet has taken before it hits the firewall.  We will
### assume packets will not jump through more than 20 hops on
### average.
MAX_HOPS                    {{ psad_max_hops }};

### Do not include any timestamp included within kernel logging
### messages (Ubuntu systems commonly have this)
IGNORE_KERNEL_TIMESTAMP     {{ psad_ignore_kernel_timestamp }};

### FIXME: try to mitigate the affects of the iptables connection
### tracking bug by ignoring tcp packets that have the ack bit set.
### Read the "BUGS" section of the psad man page.  Note that
### if a packet matches a snort SID generated by fwsnort (see
### http://www.cipherdyne.org/fwsnort/)
### then psad will see it even if the ack bit is set.  See the
### SNORT_SID_STR variable.
IGNORE_CONNTRACK_BUG_PKTS   {{ psad_ignore_conntrack_bug_pkts }};

### define a set of ports to ignore (this is useful particularly
### for port knocking applications since the knock sequence will
### look to psad like a scan).  This variable may be defined as
### a comma-separated list of port numbers or port ranges and
### corresponding protocol,  For example, to have psad ignore all
### tcp in the range 61000-61356 and udp ports 53 and 5000, use:
### IGNORE_PORTS        tcp/61000-61356, udp/53, udp/5000;
IGNORE_PORTS                {{ psad_ignore_ports }};

### allow entire protocols to be ignored.  This keyword can accept
### a comma separated list of protocols.  Each protocol must match
### the protocol that is specified in an iptables log message (case
### insensitively, so both "TCP" or "tcp" is ok).
### IGNORE_PROTOCOL             tcp,udp;
IGNORE_PROTOCOLS            {{ psad_ignore_protocols }};

### allow packets to be ignored based on interface (this is the
### "IN" interface in iptables logging messages).
IGNORE_INTERFACES           {{ psad_ignore_interfaces }};

### Ignore these specific logging prefixes
IGNORE_LOG_PREFIXES         {{ psad_ignore_log_prefixes }};

### Minimum danger level a scan must reach before any logging or
### alerting is done.  The EMAIL_ALERT_DANGER_LEVEL variable below
### only refers to email alerts; the MIN_DANGER_LEVEL variable
### applies to everything from email alerts to whether or not the
### IP directory is created within /var/log/psad/.  Hence
### MIN_DANGER_LEVEL should be set less than or equal to the value
### assigned to the EMAIL_ALERT_DANGER_LEVEL variable.
MIN_DANGER_LEVEL            {{ psad_min_danger_level }};

### Only send email alert if danger level >= to this value.
EMAIL_ALERT_DANGER_LEVEL    {{ psad_email_alert_danger_level }};

### Enable detection of malicious activity that is delivered via IPv6.  If
### ip6tables is not logging any traffic, then psad won't know anything
### about IPv6, or this variable can be set to "N" (this would be slightly
### faster if ip6tables isn't logging anything).
ENABLE_IPV6_DETECTION       {{ psad_enable_ipv6_detection }};

### Treat all subnets on local interfaces as part of HOME_NET (this
### means that these networks do not have to be manually defined)
ENABLE_INTF_LOCAL_NETS      {{ psad_enable_intf_local_nets }};

### Include MAC addresses in email alert
ENABLE_MAC_ADDR_REPORTING   {{ psad_enable_mac_addr_reporting }};

### Look for the iptables logging rule (fwcheck_psad is executed)
ENABLE_FW_LOGGING_CHECK     {{ psad_enable_fw_logging_check }};

### Send no more than this number of emails for a single
### scanning source IP.  Note that enabling this feature may cause
### alerts for real attacks to not be generated if an attack is sent
### after the email threshold has been reached for an IP address.
### This is why the default is set to "0".
EMAIL_LIMIT                 {{ psad_email_limit }};

### By default, psad maintains a counter for each scanning source address,
### but by enabling this variable psad will maintain email counters for
### each victim address that is scanned as well.
ENABLE_EMAIL_LIMIT_PER_DST  {{ psad_enable_email_limit_per_dst }};

### If "Y", send a status email message when an IP has reached the
### EMAIL_LIMIT threshold.
EMAIL_LIMIT_STATUS_MSG      {{ psad_email_limit_status_msg }};

### This variable is used to have psad throttle the email alerts it sends,
### and implemented as a per-IP threshold.  That is, if EMAIL_THROTTLE
### is set to "10", then psad will only send 1/10th as many emails for each
### scanning IP as it would have normally.  All other variables also apply,
### so this throttle value is taken into account after everything else.  The
### default of zero means to not apply any throttling.
EMAIL_THROTTLE              {{ psad_email_throttle }};

### If "Y", send email for all newly logged packets from the same
### source ip instead of just when a danger level increases.
ALERT_ALL                   {{ psad_alert_all }};

### If "Y", then psad will import old scan source ip directories
### as current scans instead of moving the directories into the
### archive directory.
IMPORT_OLD_SCANS            {{ psad_import_old_scans }};

### syslog facility and priority (the defaults are usually ok)
### The SYSLOG_FACILITY variable can be set to one of LOG_LOCAL{0-7}, and
### SYSLOG_PRIORITY can be set to one of LOG_INFO, LOG_DEBUG, LOG_NOTICE,
### LOG_WARNING, LOG_ERR, LOG_CRIT, LOG_ALERT, or LOG_EMERG
SYSLOG_IDENTITY             {{ psad_syslog_identity }};
SYSLOG_FACILITY             {{ psad_syslog_facility }};
SYSLOG_PRIORITY             {{ psad_syslog_priority }};

### Port thresholds for logging and -S and -A output.
TOP_PORTS_LOG_THRESHOLD     {{ psad_top_ports_log_threshold }};
STATUS_PORTS_THRESHOLD      {{ psad_status_ports_threshold }};

### Signature thresholds for logging and -S and -A output.
TOP_SIGS_LOG_THRESHOLD      {{ psad_top_sigs_log_threshold }};
STATUS_SIGS_THRESHOLD       {{ psad_status_sigs_threshold }};

### Attackers thresholds for logging and -S and -A output.
TOP_IP_LOG_THRESHOLD        {{ psad_top_ip_log_threshold }};
STATUS_IP_THRESHOLD         {{ psad_status_ip_threshold }};

### Specify how often to log the TOP_* information (i.e. how many
### CHECK_INTERVAL iterations before the data is logged again).
TOP_SCANS_CTR_THRESHOLD     {{ psad_top_scans_ctr_threshold }};

### Send scan logs to dshield.org.  This is disabled by default,
### but is a good idea to enable it (subject to your site security
### policy) since the DShield service helps to track the bad guys.
### For more information visit http://www.dshield.org
ENABLE_DSHIELD_ALERTS       {{ psad_enable_dshield_alerts }};

### dshield.org alert email address; this should not be changed
### unless the guys at DShield have changed it.
DSHIELD_ALERT_EMAIL         {{ psad_dshield_alert_email }};

### Time interval (hours) to send email alerts to dshield.org.
### The default is 6 hours, and cannot be less than 1 hour or
### more than 24 hours.
DSHIELD_ALERT_INTERVAL      {{ psad_dshield_alert_interval }};  ### hours

### If you have a DShield user id you can set it here.  The
### default is "0".
DSHIELD_USER_ID             {{ psad_dshield_user_id }};

### If you want the outbound DShield email to appear as though it
### is coming from a particular user address then set it here.
DSHIELD_USER_EMAIL          {{ psad_dshield_user_email }};

### Threshold danger level for DShield data; a scan must reach this
### danger level before associated packets will be included in an
### alert to DShield.  Note that zero is the default since this
### will allow DShield to apply its own logic to determine what
### constitutes a scan (_all_ iptables log messages will be included
### in DShield email alerts).
DSHIELD_DL_THRESHOLD        {{ psad_dshield_dl_threshold }};

### List of servers.  Fwsnort supports the same variable resolution as
#### Snort.
HTTP_SERVERS                {{ psad_http_servers }};
SMTP_SERVERS                {{ psad_smtp_servers }};
DNS_SERVERS                 {{ psad_dns_servers }};
SQL_SERVERS                 {{ psad_sql_servers }};
TELNET_SERVERS              {{ psad_telnet_servers }};

#### AOL AIM server nets
AIM_SERVERS                 {{ psad_aim_servers }};

### Configurable port numbers
HTTP_PORTS                  {{ psad_http_ports }};
SHELLCODE_PORTS             {{ psad_shellcode_ports }};
ORACLE_PORTS                {{ psad_oracle_ports }};

### If this is enabled, then psad will die if a rule in the
### /etc/psad/signatures file contains an unsupported option (otherwise
### a syslog warning will be generated).
ENABLE_SNORT_SIG_STRICT     {{ psad_enable_snort_sig_strict }};

### If "Y", enable automated IDS response (auto manages
### firewall rulesets).
ENABLE_AUTO_IDS             {{ psad_enable_auto_ids }};

### Block all traffic from offending IP if danger
### level >= to this value
AUTO_IDS_DANGER_LEVEL       {{ psad_auto_ids_danger_level }};

### Set the auto-blocked timeout in seconds (the default is one hour).
### A value of 0 means block forever.
AUTO_BLOCK_TIMEOUT          {{ psad_auto_block_timeout }};

### Set the auto-blocked timeout in seconds for each danger
### level - zero means to block permanently.  Each of these
### can be set independently
AUTO_BLOCK_DL1_TIMEOUT      {{ psad_auto_block_dl1_timeout }};
AUTO_BLOCK_DL2_TIMEOUT      {{ psad_auto_block_dl2_timeout }};
AUTO_BLOCK_DL3_TIMEOUT      {{ psad_auto_block_dl3_timeout }};
AUTO_BLOCK_DL4_TIMEOUT      {{ psad_auto_block_dl4_timeout }};
AUTO_BLOCK_DL5_TIMEOUT      {{ psad_auto_block_dl5_timeout }};   ### permanent

### Enable regex checking on log prefixes for active response
ENABLE_AUTO_IDS_REGEX       {{ psad_enable_auto_ids_regex }};

### Only block if the iptables log message matches the following regex
AUTO_BLOCK_REGEX            {{ psad_auto_block_regex }};  ### from fwsnort logging prefixes

### Control whether "renew" auto-block emails get sent.  This is disabled
### by default because lots of IPs could have been blocked, and psad
### should not generate a renew email for each of them.
ENABLE_RENEW_BLOCK_EMAILS   {{ psad_enable_renew_block_emails }};

### By setting this variable to N, all auto-blocking emails can be
### suppressed.
ENABLE_AUTO_IDS_EMAILS      {{ psad_enable_auto_ids_emails }};

### Enable iptables blocking (only gets enabled if
### ENABLE_AUTO_IDS is also set)
IPTABLES_BLOCK_METHOD       {{ psad_iptables_block_method }};

### Enable ipset blocking (only gets enabled if
### ENABLE_AUTO_IDS is also set)
### Do not enable IPSET and IPTABLE at the same time
IPSET_BLOCK_METHOD       {{ psad_ipset_block_method }};

### Specify chain names to which iptables blocking rules will be
### added with the IPT_AUTO_CHAIN{n} keyword.  There is no limit on the
### number of IPT_AUTO_CHAIN{n} keywords; just increment the {n} number
### to add an additional IPT_AUTO_CHAIN requirement. The format for this
### variable is: <Target>,<Direction>,<Table>,<From_chain>,<Jump_rule_position>, \
###              <To_chain>,<Rule_position>.
### "Target": Can be any legitimate iptables target, but should usually
###           just be "DROP".
### "Direction": Can be "src", "dst", or "both", which correspond to the
###              INPUT, OUTPUT, and FORWARD chains.
### "Table": Can be any iptables table, but the default is "filter".
### "From_chain": Is the chain from which packets will be jumped.
### "Jump_rule_position": Defines the position within the From_chain where
###                       the jump rule is added.
### "To_chain": Is the chain to which packets will be jumped. This is the
###             main chain where psad rules are added.
### "Rule_position": Defines the position where rule are added within the
###                  To_chain.
###
### The following defaults make sense for most installations, but note
### it is possible to include blocking rules in, say, the "nat" table
### using this functionality as well.  The following three lines provide
### usage examples:
#IPT_AUTO_CHAIN1              DROP, src, filter, INPUT, 1, PSAD_BLOCK_INPUT, 1;
#IPT_AUTO_CHAIN2              DROP, dst, filter, OUTPUT, 1, PSAD_BLOCK_OUTPUT, 1;
#IPT_AUTO_CHAIN3              DROP, both, filter, FORWARD, 1, PSAD_BLOCK_FORWARD, 1;
IPT_AUTO_CHAIN1             {{ psad_ipt_auto_chain1 }};
IPT_AUTO_CHAIN2             {{ psad_ipt_auto_chain2 }};
IPT_AUTO_CHAIN3             {{ psad_ipt_auto_chain3 }};

### Specify ipset setnames to which blocked ips will be added to
### with the IPSET_AUTO_SETNAME{n} keyword.  There is no limit on the
### number of IPSET_AUTO_SETNAME{n} keywords; just increment the {n} number
### to add an additional IPSET_AUTO_SETNAME requirement. The format for this
### variable is: <SETNAME>,<USE_IPV6_FLAG>
### The following defaults make sense for most installations.
#IPSET_AUTO_SETNAME#        SETNAME,USE_IPV6_FLAG;
#IPSET_AUTO_SETNAME1        PSAD_BLOCK_IPV4_LIST,0;
#IPSET_AUTO_SETNAME2        PSAD_BLOCK_IPV6_LIST,1;
IPSET_AUTO_SETNAME1        {{ psad_ipset_auto_setname1 }};
IPSET_AUTO_SETNAME2        {{ psad_ipset_auto_setname2 }};

### Flush all existing rules in the psad chains at psad start time.
FLUSH_IPT_AT_INIT           {{ psad_flush_ipt_at_init }};

### Prerequisite check for existence of psad chains and jump rules
IPTABLES_PREREQ_CHECK       {{ psad_iptables_prereq_check }};

### Enable tcp wrappers blocking (only gets enabled if
### ENABLE_AUTO_IDS is also set)
TCPWRAPPERS_BLOCK_METHOD    {{ psad_tcpwrappers_block_method }};

### By default, enable whois lookups against scanning IP addresses.
ENABLE_WHOIS_LOOKUPS        {{ psad_enable_whois_lookups }};

### Set the whois timeout
WHOIS_TIMEOUT               {{ psad_whois_timeout }};  ### seconds

### Set the number of times an ip can be seen before another whois
### lookup is issued.
WHOIS_LOOKUP_THRESHOLD      {{ psad_whois_lookup_threshold }};

### Use this option to force all whois information to contain ascii-only data.
### Sometime whois information for IP addresses in China and other countries
### can contain non-ascii data.  If this option is enabled, then any non-
### ascii characters will be replaced with "NA".
ENABLE_WHOIS_FORCE_ASCII    {{ psad_enable_whois_force_ascii }};

### This variable forces all whois lookups to be done against the source IP
### even when they are associated with a directly connected local network.  IT
### is usually a good idea to leave this setting as the default of 'N'.
ENABLE_WHOIS_FORCE_SRC_IP   {{ psad_enable_whois_force_src_ip }};

### By default, enable reverse DNS lookups against scanning IP addresses.
ENABLE_DNS_LOOKUPS          {{ psad_enable_dns_lookups }};

### Set the number of times an ip can be seen before another dns
### lookup is issued.
DNS_LOOKUP_THRESHOLD        {{ psad_dns_lookup_threshold }};

### Enable psad to run an external script or program (use at your
### own risk!)
ENABLE_EXT_SCRIPT_EXEC      {{ psad_enable_ext_script_exec }};

### Define an external program to run after a scan is caught.
### Note that the scan source ip can be specified on the command
### line to the external program through the use of the "SRCIP"
### string (along with some appropriate switch for the program).
### Of course this is only useful if the external program knows
### what to do with this information.
### Example:  EXTERNAL_SCRIPT       /path/to/script --ip SRCIP -v;
EXTERNAL_SCRIPT             {{ psad_external_script }};

### Control execution of EXTERNAL_SCRIPT (only once per IP, or
### every time a scan is detected for an ip).
EXEC_EXT_SCRIPT_PER_ALERT   {{ psad_exec_ext_script_per_alert }};

### Enable psad to run an external script or program upon setting
### iptables block (use at your own risk!)
ENABLE_EXT_BLOCK_SCRIPT_EXEC      {{ psad_enable_ext_block_script_exec }};

### Define an external program to run after a scan is blocked.
### Note that the scan source ip can be specified on the command
### line to the external program through the use of the "SRCIP"
### string (along with some appropriate switch for the program).
### Of course this is only useful if the external program knows
### what to do with this information.
### Example:  EXTERNAL_BLOCK_SCRIPT       /path/to/script --ip SRCIP -v;
EXTERNAL_BLOCK_SCRIPT             {{ psad_external_block_script }};

### Some syslog daemons support a customized time stamp, so allow
### a user-specified regex to account for this when necessary (disabled
### by default). This regex should also extract the hostname from the
### syslog messages as well, so the timestamp and the hostname should be
### stored in $1 and $2 respectively. Here is an example syslog message
### and how to extract the timestamp and hostname:
###     2015-03-08T02:25:11.444012+02:00 servername kernel: ...
### ...would be handled properly with:
###     ^\s*([\d\-]+T(?:\d{2}\:){2}\d{2}\S+)\s+(\S+)\s+kernel:
ENABLE_CUSTOM_SYSLOG_TS_RE      {{ psad_enable_custom_syslog_ts_re }};
CUSTOM_SYSLOG_TS_RE             {{ psad_custom_syslog_ts_re }};

### Disk usage variables
DISK_CHECK_INTERVAL         {{ psad_disk_check_interval }};  ### seconds

### This can be set to 0 to disable disk checking altogether
DISK_MAX_PERCENTAGE         {{ psad_disk_max_percentage }};

### This can be set to 0 to have psad not place any limit on the
### number of times it will attempt to remove data from
### /var/log/psad/.
DISK_MAX_RM_RETRIES         {{ psad_disk_max_rm_retries }};

### Enable archiving of old scan directories at psad startup.
ENABLE_SCAN_ARCHIVE         {{ psad_enable_scan_archive }};

### Truncate fwdata file at startup
TRUNCATE_FWDATA             {{ psad_truncate_fwdata }};

### Only archive scanning IP directories that have reached a danger
### level greater than or equal to this value.  Archiving old
### scanning ip directories only takes place at psad startup.
MIN_ARCHIVE_DANGER_LEVEL    {{ psad_min_archive_danger_level }};

### Email subject line config.  Change these prefixes if you want
### psad to generate email alerts that say something other than
### the following.
MAIL_ALERT_PREFIX           {{ psad_mail_alert_prefix }};
MAIL_STATUS_PREFIX          {{ psad_mail_status_prefix }};
MAIL_ERROR_PREFIX           {{ psad_mail_error_prefix }};
MAIL_FATAL_PREFIX           {{ psad_mail_fatal_prefix }};

### URL for getting the latest psad signatures
SIG_UPDATE_URL              {{ psad_sig_update_url }};

### These next two are psadwatchd vars
PSADWATCHD_CHECK_INTERVAL   {{ psad_psadwatchd_check_interval }};  ### seconds
PSADWATCHD_MAX_RETRIES      {{ psad_psadwatchd_max_retries }};

### Directories
INSTALL_ROOT                {{ psad_install_root }};
PSAD_DIR                    {{ psad_psad_dir }};
PSAD_RUN_DIR                {{ psad_psad_run_dir }};
PSAD_FIFO_DIR               {{ psad_psad_fifo_dir }};
PSAD_LIBS_DIR               {{ psad_psad_libs_dir }};
PSAD_CONF_DIR               {{ psad_psad_conf_dir }};
PSAD_ERR_DIR                {{ psad_psad_err_dir }};
CONF_ARCHIVE_DIR            {{ psad_conf_archive_dir }};
SCAN_DATA_ARCHIVE_DIR       {{ psad_scan_data_archive_dir }};
ANALYSIS_MODE_DIR           {{ psad_analysis_mode_dir }};
SNORT_RULES_DIR             {{ psad_snort_rules_dir }};
FWSNORT_RULES_DIR           {{ psad_fwsnort_rules_dir }};  ### may not exist

### Files
FW_DATA_FILE                {{ psad_fw_data_file }};
ULOG_DATA_FILE              {{ psad_ulog_data_file }};
FW_CHECK_FILE               {{ psad_fw_check_file }};
DSHIELD_EMAIL_FILE          {{ psad_dshield_email_file }};
SIGS_FILE                   {{ psad_sigs_file }};
PROTOCOLS_FILE              {{ psad_protocols_file }};
ICMP_TYPES_FILE             {{ psad_icmp_types_file }};
ICMP6_TYPES_FILE            {{ psad_icmp6_types_file }};
AUTO_DL_FILE                {{ psad_auto_dl_file }};
SNORT_RULE_DL_FILE          {{ psad_snort_rule_dl_file }};
POSF_FILE                   {{ psad_posf_file }};
P0F_FILE                    {{ psad_p0f_file }};
IP_OPTS_FILE                {{ psad_ip_opts_file }};
PSAD_FIFO_FILE              {{ psad_psad_fifo_file }};
ETC_HOSTS_DENY_FILE         {{ psad_etc_hosts_deny_file }};
ETC_SYSLOG_CONF             {{ psad_etc_syslog_conf }};
ETC_RSYSLOG_CONF            {{ psad_etc_rsyslog_conf }};
ETC_SYSLOGNG_CONF           {{ psad_etc_syslogng_conf }};
ETC_METALOG_CONF            {{ psad_etc_metalog_conf }};
STATUS_OUTPUT_FILE          {{ psad_status_output_file }};
ANALYSIS_OUTPUT_FILE        {{ psad_analysis_output_file }};
INSTALL_LOG_FILE            {{ psad_install_log_file }};

### PID files
PSAD_PID_FILE               {{ psad_psad_pid_file }};
PSAD_FW_READ_PID_FILE       {{ psad_psad_fw_read_pid_file }};
PSAD_CMDLINE_FILE           {{ psad_psad_cmdline_file }};
KMSGSD_PID_FILE             {{ psad_kmsgsd_pid_file }};
PSADWATCHD_PID_FILE         {{ psad_psadwatchd_pid_file }};

### List of ips that have been auto blocked by iptables
### or tcpwrappers (the auto blocking feature is disabled by
### default, see the psad man page and the ENABLE_AUTO_IDS
### variable).
AUTO_BLOCK_IPT_FILE         {{ psad_auto_block_ipt_file }};
AUTO_BLOCK_TCPWR_FILE       {{ psad_auto_block_tcpwr_file }};

### File used internally by psad to add iptables blocking
### rules to a running psad process
AUTO_IPT_SOCK               {{ psad_auto_ipt_sock }};

FW_ERROR_LOG                {{ psad_fw_error_log }};
PRINT_SCAN_HASH             {{ psad_print_scan_hash }};

### /proc interface for controlling ip forwarding
PROC_FORWARD_FILE           {{ psad_proc_forward_file }};

### Packet counters for tcp, udp, and icmp protocols
PACKET_COUNTER_FILE         {{ psad_packet_counter_file }};

### Top scanned ports
TOP_SCANNED_PORTS_FILE      {{ psad_top_scanned_ports_file }};

### Top signature matches
TOP_SIGS_FILE               {{ psad_top_sigs_file }};

### Top attackers
TOP_ATTACKERS_FILE          {{ psad_top_attackers_file }};

### Counter file for Dshield alerts
DSHIELD_COUNTER_FILE        {{ psad_dshield_counter_file }};

### Counter file for iptables prefixes
IPT_PREFIX_COUNTER_FILE     {{ psad_ipt_prefix_counter_file }};

### iptables command output and error collection files; these are
### used by IPTables::ChainMgr
IPT_OUTPUT_PATTERN          {{ psad_ipt_output_pattern }};
IPT_ERROR_PATTERN           {{ psad_ipt_error_pattern }};

### system binaries
iptablesCmd      {{ psad_iptablescmd }};
ip6tablesCmd     {{ psad_ip6tablescmd }};
shCmd            {{ psad_shcmd }};
wgetCmd          {{ psad_wgetcmd }};
gzipCmd          {{ psad_gzipcmd }};
mknodCmd         {{ psad_mknodcmd }};
psCmd            {{ psad_pscmd }};
mailCmd          {{ psad_mailcmd }};
sendmailCmd      {{ psad_sendmailcmd }};
ifconfigCmd      {{ psad_ifconfigcmd }};
ipCmd            {{ psad_ipcmd }};
killallCmd       {{ psad_killallcmd }};
netstatCmd       {{ psad_netstatcmd }};
unameCmd         {{ psad_unamecmd }};
whoisCmd         {{ psad_whoiscmd }};
dfCmd            {{ psad_dfcmd }};
fwcheck_psadCmd  {{ psad_fwcheck_psadcmd }};
psadwatchdCmd    {{ psad_psadwatchdcmd }};
kmsgsdCmd        {{ psad_kmsgsdcmd }};
psadCmd          {{ psad_psadcmd }};
