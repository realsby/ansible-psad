---
# defaults file for ansible-psad
### github user/orgranization source for cloning psad
psad_github_org: "mrash"
psad_github_version: "master"

### Supports multiple email addresses (as a comma separated
### list).
psad_email_addresses: "root@localhost"

### Machine hostname
psad_hostname: "{{ ansible_hostname }}"

### Specify the home and external networks.  Note that by default the
### ENABLE_INTF_LOCAL_NETS is enabled, so psad automatically detects
### all of the directly connected subnets and uses this information as
### the HOME_NET variable.
psad_home_net: "any"
psad_external_net: "any"

### The FW_SEARCH_ALL variable controls how psad will parse iptables
### messages.  If it is set to "Y" then psad will parse all iptables
### messages for evidence of scan activity.  If it is set to "N" then
### psad will only parse those iptables messages that contain logging
### prefixes specified by the FW_MSG_SEARCH variable below.  Logging
### prefixes are set with the --log-prefix command line option to iptables.
### Setting FW_SEARCH_ALL to "N" is useful for having psad only analyze
### iptables messages that are logged out of a specific iptables chain
### (multiple strings can be searched for, see the comment above the
### FW_MSG_SEARCH variable below) or a specific logging rule for example.
### FW_SEARCH_ALL is set to "Y" by default since usually people want psad
### to parse all iptables messages.
psad_fw_search_all: "Y"

### The FW_MSG_SEARCH variable can be modified to look for logging messages
### that are specific to your firewall configuration (specified by the
### "--log-prefix" option.  For example, if your firewall uses the
### string "Audit" for packets that have been blocked, then you could
### set FW_MSG_SEARCH to "Audit";  The default string to search for is
### "DROP".  Both psad and kmsgsd reference this file.  NOTE: You can
### specify this variable multiple times to have psad search for multiple
### strings.  For example to have psad search for the strings "Audit" and
### "Reject", you would use the following two lines:
#FW_MSG_SEARCH               Audit;
#FW_MSG_SEARCH               REJECT;
psad_fw_msg_search: "DROP"

### What type of interface configuration do you use?  Set this variable to
### "iproute2" if you want to use the iproute2 type configuration.
### iproute2 does not use aliases for multi-homed interfaces and
### ifconfig does not show secondary addresses for multi-homed interfaces.
#IFCFGTYPE  iproute2;
psad_ifcfgtype: "ifconfig"

### Danger levels.  These represent the total number of
### packets required for a scan to reach each danger level.
### A scan may also reach a danger level if the scan trips
### a signature or if the scanning ip is listed in
### auto_ips so a danger level is automatically
### assigned.
psad_danger_level1: "5"    ### Number of packets.
psad_danger_level2: "15"
psad_danger_level3: "150"
psad_danger_level4: "1500"
psad_danger_level5: "10000"

### Set the interval (in seconds) psad will use to sleep before
### checking for new iptables log messages
psad_check_interval: "5"

### Search for snort "sid" values generated by fwsnort
### or snort2iptables
psad_snort_sid_str: "SID"

### Set the minimum range of ports that must be scanned before
### psad will send an alert.  The default is 1 so that at
### least two port must be scanned (p2-p1 >= 1).  This can be set
### to 0 if you want psad to be extra paranoid, or 30000 if not.
psad_port_range_scan_threshold: "1"

### For IP protocol scan detection (nmap -sO).  While it may be relatively
### common for a host to trigger on tcp, udp, and icmp, it is more unusual if
### a host triggers on, say, five different IP protocols
psad_protocol_scan_threshold: "5"

### If "Y", means that scans will never timeout.  This is useful
### for catching scans that take place over long periods of time
### where the attacker is trying to slip beneath the IDS thresholds.
psad_enable_persistence: "Y"

### This is used only if ENABLE_PERSISTENCE = "N";
psad_scan_timeout: "3600"  ### seconds

### Specify how often to timeout old scan data relative to CHECK_INTERVAL
### iterations.  This feature is only used if ENABLE_PERSISTENCE is disabled.
### Note that for psad processes that have tracked a lot of scans, it is
### advisable to leave this threshold at the default value of 5 or greater
### because the scan tracking hash may be quite large.
psad_persistence_ctr_threshold: "5"

### Limit the number of src->dst IP pairs that psad will track.  The default
### is zero (i.e. unlimited), but if psad is running on a system with limited
### memory, this can be handy to restrict psad's memory usage.  It is best to
### combine this option with disabling ENABLE_PERSISTENCE so that older scans
### are deleted and therefore newer scans will on average continue to be
### tracked.  A good non-zero value is, say, 50000, but this will vary
### depending on available system memory.
psad_max_scan_ip_pairs: "0"

### If "Y", means all signatures will be shown since
### the scan started instead of just the current ones.
psad_show_all_signatures: "N"

### Allow reporting methods to be enabled/restricted.  This keyword can
### accept values of "nosyslog" (don't write any messages to syslog),
### "noemail" (don't send any email messages), or "ALL" (to generate both
### syslog and email messages).  "ALL" is the default.  Both "nosyslog"
### and "noemail" can be combined with a comma to disable all logging
### and alerting.
psad_alerting_methods: "ALL"

### By default, psad checks for journalctl on systems where systemd is
### installed. If journalctl is running, then psad will automatically acquire
### syslog data from journalctl instead of parsing a file in the /var/log/
### directory.
psad_auto_detect_journalctl: "Y"

### The following vars have psad acquire iptables log data from the
### /var/log/messages file which the local syslog daemon (usually) writes
### iptables log messages to.  If the ENABLE_SYSLOG_FILE variable below is set
### to "N", then psad reconfigures syslog to write iptables log data to the
### /var/lib/psad/psadfifo fifo file where the messages are picked up by kmsgsd
### written to the file /var/log/psad/fwdata for analysis by psad.  On some
### systems, having syslog communicate log data to kmsgsd can be problematic
### (syslog configs and external factors such as Apparmor and SELinux can play
### a role here), so leaving the ENABLE_SYSLOG_FILE variable set to "Y" is
### usually recommended. However, if psad is running on a system where systemd
### is installed and syslog messages are accessed via journalctl instead of
### being written to the filesystem, then the ENABLE_FW_MSG_READ_CMD
### functionality should be used to take over (see below).
psad_enable_syslog_file: "Y"
psad_ipt_write_fwdata: "Y"
psad_ipt_syslog_file: "/var/log/syslog"

### Set the type of syslog daemon that is used.  The SYSLOG_DAEMON
### variable accepts four possible values: syslogd, syslog-ng, ulogd,
### or metalog.  Note: this variable is only used if ENABLE_SYSLOG_FILE is
### disabled, and this in turn will mean that the legacy kmsgsd daemon will
### collect firewall logs from syslog via the old named pipe mechanism.
psad_syslog_daemon: "syslogd"

### This is primarily used to acquire syslog messages from journalctl on
### systems where systemd is running.
psad_enable_fw_msg_read_cmd: "Y"
psad_fw_msg_read_cmd: "/bin/journalctl"
psad_fw_msg_read_cmd_args: "-f -k"
psad_use_fw_msg_read_cmd_args: "Y"
psad_fw_msg_read_min_pkts: "30"

### When enabled, this instructs psad to write the "msg" field
### associated with Snort rule matches to syslog.
psad_enable_sig_msg_syslog: "Y"
psad_sig_msg_syslog_threshold: "10"
psad_sig_sid_syslog_threshold: "10"

### For systems with an init daemon like 'upstart' that offer built-in process
### monitoring, it is not necessary to run the psadwatchd daemon, and this is
### the default.
psad_enable_psadwatchd: "N"

### Expect that all logged TCP SYN packets include the options portion of the
### TCP header (requires the --log-tcp-options argument to the iptables LOG
### rule).  If a SYN packet is received that does not include TCP options, then
### it may be created by a scanner such as Eratta Security's "masscan").  Note
### that psad still does a check to see if at least one log message is seen
### includes the OPT field before expecting the remaining messages to also
### include this field.
psad_expect_tcp_options: "Y"

### TTL values are decremented depending on the number of hops
### the packet has taken before it hits the firewall.  We will
### assume packets will not jump through more than 20 hops on
### average.
psad_max_hops: "20"

### Do not include any timestamp included within kernel logging
### messages (Ubuntu systems commonly have this)
psad_ignore_kernel_timestamp: "Y"

### FIXME: try to mitigate the affects of the iptables connection
### tracking bug by ignoring tcp packets that have the ack bit set.
### Read the "BUGS" section of the psad man page.  Note that
### if a packet matches a snort SID generated by fwsnort (see
### http://www.cipherdyne.org/fwsnort/)
### then psad will see it even if the ack bit is set.  See the
### SNORT_SID_STR variable.
psad_ignore_conntrack_bug_pkts: "Y"

### define a set of ports to ignore (this is useful particularly
### for port knocking applications since the knock sequence will
### look to psad like a scan).  This variable may be defined as
### a comma-separated list of port numbers or port ranges and
### corresponding protocol,  For example, to have psad ignore all
### tcp in the range 61000-61356 and udp ports 53 and 5000, use:
### IGNORE_PORTS        tcp/61000-61356, udp/53, udp/5000;
psad_ignore_ports: "NONE"

### allow entire protocols to be ignored.  This keyword can accept
### a comma separated list of protocols.  Each protocol must match
### the protocol that is specified in an iptables log message (case
### insensitively, so both "TCP" or "tcp" is ok).
### IGNORE_PROTOCOL             tcp,udp;
psad_ignore_protocols: "NONE"

### allow packets to be ignored based on interface (this is the
### "IN" interface in iptables logging messages).
psad_ignore_interfaces: "NONE"

### Ignore these specific logging prefixes
psad_ignore_log_prefixes: "NONE"

### Minimum danger level a scan must reach before any logging or
### alerting is done.  The EMAIL_ALERT_DANGER_LEVEL variable below
### only refers to email alerts; the MIN_DANGER_LEVEL variable
### applies to everything from email alerts to whether or not the
### IP directory is created within /var/log/psad/.  Hence
### MIN_DANGER_LEVEL should be set less than or equal to the value
### assigned to the EMAIL_ALERT_DANGER_LEVEL variable.
psad_min_danger_level: "1"

### Only send email alert if danger level >= to this value.
psad_email_alert_danger_level: "1"

### Enable detection of malicious activity that is delivered via IPv6.  If
### ip6tables is not logging any traffic, then psad won't know anything
### about IPv6, or this variable can be set to "N" (this would be slightly
### faster if ip6tables isn't logging anything).
psad_enable_ipv6_detection: "Y"

### Treat all subnets on local interfaces as part of HOME_NET (this
### means that these networks do not have to be manually defined)
psad_enable_intf_local_nets: "Y"

### Include MAC addresses in email alert
psad_enable_mac_addr_reporting: "N"

### Look for the iptables logging rule (fwcheck_psad is executed)
psad_enable_fw_logging_check: "Y"

### Send no more than this number of emails for a single
### scanning source IP.  Note that enabling this feature may cause
### alerts for real attacks to not be generated if an attack is sent
### after the email threshold has been reached for an IP address.
### This is why the default is set to "0".
psad_email_limit: "0"

### By default, psad maintains a counter for each scanning source address,
### but by enabling this variable psad will maintain email counters for
### each victim address that is scanned as well.
psad_enable_email_limit_per_dst: "N"

### If "Y", send a status email message when an IP has reached the
### EMAIL_LIMIT threshold.
psad_email_limit_status_msg: "Y"

### This variable is used to have psad throttle the email alerts it sends,
### and implemented as a per-IP threshold.  That is, if EMAIL_THROTTLE
### is set to "10", then psad will only send 1/10th as many emails for each
### scanning IP as it would have normally.  All other variables also apply,
### so this throttle value is taken into account after everything else.  The
### default of zero means to not apply any throttling.
psad_email_throttle: "0"

### If "Y", send email for all newly logged packets from the same
### source ip instead of just when a danger level increases.
psad_alert_all: "Y"

### If "Y", then psad will import old scan source ip directories
### as current scans instead of moving the directories into the
### archive directory.
psad_import_old_scans: "N"

### syslog facility and priority (the defaults are usually ok)
### The SYSLOG_FACILITY variable can be set to one of LOG_LOCAL{0-7}, and
### SYSLOG_PRIORITY can be set to one of LOG_INFO, LOG_DEBUG, LOG_NOTICE,
### LOG_WARNING, LOG_ERR, LOG_CRIT, LOG_ALERT, or LOG_EMERG
psad_syslog_identity: "psad"
psad_syslog_facility: "LOG_LOCAL7"
psad_syslog_priority: "LOG_INFO"

### Port thresholds for logging and -S and -A output.
psad_top_ports_log_threshold: "500"
psad_status_ports_threshold: "20"

### Signature thresholds for logging and -S and -A output.
psad_top_sigs_log_threshold: "500"
psad_status_sigs_threshold: "50"

### Attackers thresholds for logging and -S and -A output.
psad_top_ip_log_threshold: "500"
psad_status_ip_threshold: "25"

### Specify how often to log the TOP_* information (i.e. how many
### CHECK_INTERVAL iterations before the data is logged again).
psad_top_scans_ctr_threshold: "1"

### Send scan logs to dshield.org.  This is disabled by default,
### but is a good idea to enable it (subject to your site security
### policy) since the DShield service helps to track the bad guys.
### For more information visit http://www.dshield.org
psad_enable_dshield_alerts: "N"

### dshield.org alert email address; this should not be changed
### unless the guys at DShield have changed it.
psad_dshield_alert_email: "reports@dshield.org"

### Time interval (hours) to send email alerts to dshield.org.
### The default is 6 hours, and cannot be less than 1 hour or
### more than 24 hours.
psad_dshield_alert_interval: "6"  ### hours

### If you have a DShield user id you can set it here.  The
### default is "0".
psad_dshield_user_id: "0"

### If you want the outbound DShield email to appear as though it
### is coming from a particular user address then set it here.
psad_dshield_user_email: "NONE"

### Threshold danger level for DShield data; a scan must reach this
### danger level before associated packets will be included in an
### alert to DShield.  Note that zero is the default since this
### will allow DShield to apply its own logic to determine what
### constitutes a scan (_all_ iptables log messages will be included
### in DShield email alerts).
psad_dshield_dl_threshold: "0"

### List of servers.  Fwsnort supports the same variable resolution as
#### Snort.
psad_http_servers: "$HOME_NET"
psad_smtp_servers: "$HOME_NET"
psad_dns_servers: "$HOME_NET"
psad_sql_servers: "$HOME_NET"
psad_telnet_servers: "$HOME_NET"

#### AOL AIM server nets
psad_aim_servers: "[64.12.24.0/24, 64.12.25.0/24, 64.12.26.14/24, 64.12.28.0/24, 64.12.29.0/24, 64.12.161.0/24, 64.12.163.0/24, 205.188.5.0/24, 205.188.9.0/24]"

### Configurable port numbers
psad_http_ports: "80"
psad_shellcode_ports: "!80"
psad_oracle_ports: "1521"

### If this is enabled, then psad will die if a rule in the
### /etc/psad/signatures file contains an unsupported option (otherwise
### a syslog warning will be generated).
psad_enable_snort_sig_strict: "Y"

### If "Y", enable automated IDS response (auto manages
### firewall rulesets).
psad_enable_auto_ids: "N"

### Block all traffic from offending IP if danger
### level >= to this value
psad_auto_ids_danger_level: "5"

### Set the auto-blocked timeout in seconds (the default is one hour).
### A value of 0 means block forever.
psad_auto_block_timeout: "3600"

### Set the auto-blocked timeout in seconds for each danger
### level - zero means to block permanently.  Each of these
### can be set independently
psad_auto_block_dl1_timeout: "$AUTO_BLOCK_TIMEOUT"
psad_auto_block_dl2_timeout: "$AUTO_BLOCK_TIMEOUT"
psad_auto_block_dl3_timeout: "$AUTO_BLOCK_TIMEOUT"
psad_auto_block_dl4_timeout: "$AUTO_BLOCK_TIMEOUT"
psad_auto_block_dl5_timeout: "0"   ### permanent

### Enable regex checking on log prefixes for active response
psad_enable_auto_ids_regex: "N"

### Only block if the iptables log message matches the following regex
psad_auto_block_regex: "ESTAB"  ### from fwsnort logging prefixes

### Control whether "renew" auto-block emails get sent.  This is disabled
### by default because lots of IPs could have been blocked, and psad
### should not generate a renew email for each of them.
psad_enable_renew_block_emails: "N"

### By setting this variable to N, all auto-blocking emails can be
### suppressed.
psad_enable_auto_ids_emails: "Y"

### Enable iptables blocking (only gets enabled if
### ENABLE_AUTO_IDS is also set)
psad_iptables_block_method: "N"

### Enable ipset blocking (only gets enabled if
### ENABLE_AUTO_IDS is also set)
### Do not enable IPSET and IPTABLE at the same time
psad_ipset_block_method: "Y"

### Specify chain names to which iptables blocking rules will be
### added with the IPT_AUTO_CHAIN{n} keyword.  There is no limit on the
### number of IPT_AUTO_CHAIN{n} keywords; just increment the {n} number
### to add an additional IPT_AUTO_CHAIN requirement. The format for this
### variable is: <Target>,<Direction>,<Table>,<From_chain>,<Jump_rule_position>, \
###              <To_chain>,<Rule_position>.
### "Target": Can be any legitimate iptables target, but should usually
###           just be "DROP".
### "Direction": Can be "src", "dst", or "both", which correspond to the
###              INPUT, OUTPUT, and FORWARD chains.
### "Table": Can be any iptables table, but the default is "filter".
### "From_chain": Is the chain from which packets will be jumped.
### "Jump_rule_position": Defines the position within the From_chain where
###                       the jump rule is added.
### "To_chain": Is the chain to which packets will be jumped. This is the
###             main chain where psad rules are added.
### "Rule_position": Defines the position where rule are added within the
###                  To_chain.
###
### The following defaults make sense for most installations, but note
### it is possible to include blocking rules in, say, the "nat" table
### using this functionality as well.  The following three lines provide
### usage examples:
#IPT_AUTO_CHAIN1              DROP, src, filter, INPUT, 1, PSAD_BLOCK_INPUT, 1;
#IPT_AUTO_CHAIN2              DROP, dst, filter, OUTPUT, 1, PSAD_BLOCK_OUTPUT, 1;
#IPT_AUTO_CHAIN3              DROP, both, filter, FORWARD, 1, PSAD_BLOCK_FORWARD, 1;
psad_ipt_auto_chain1: "DROP, src, filter, INPUT, 1, PSAD_BLOCK_INPUT, 1"
psad_ipt_auto_chain2: "DROP, dst, filter, OUTPUT, 1, PSAD_BLOCK_OUTPUT, 1"
psad_ipt_auto_chain3: "DROP, both, filter, FORWARD, 1, PSAD_BLOCK_FORWARD, 1"

### Specify ipset setnames to which blocked ips will be added to
### with the IPSET_AUTO_SETNAME{n} keyword.  There is no limit on the
### number of IPSET_AUTO_SETNAME{n} keywords; just increment the {n} number
### to add an additional IPSET_AUTO_SETNAME requirement. The format for this
### variable is: <SETNAME>,<USE_IPV6_FLAG>
### The following defaults make sense for most installations.
#IPSET_AUTO_SETNAME#        SETNAME,USE_IPV6_FLAG;
#IPSET_AUTO_SETNAME1        PSAD_BLOCK_IPV4_LIST,0;
#IPSET_AUTO_SETNAME2        PSAD_BLOCK_IPV6_LIST,1;
psad_ipset_auto_setname1: "PSAD_BLOCK_IPV4_LIST,0"
psad_ipset_auto_setname2: "PSAD_BLOCK_IPV6_LIST,1"

### Flush all existing rules in the psad chains at psad start time.
psad_flush_ipt_at_init: "Y"

### Prerequisite check for existence of psad chains and jump rules
psad_iptables_prereq_check: "1"

### Enable tcp wrappers blocking (only gets enabled if
### ENABLE_AUTO_IDS is also set)
psad_tcpwrappers_block_method: "N"

### By default, enable whois lookups against scanning IP addresses.
psad_enable_whois_lookups: "Y"

### Set the whois timeout
psad_whois_timeout: "60"  ### seconds

### Set the number of times an ip can be seen before another whois
### lookup is issued.
psad_whois_lookup_threshold: "20"

### Use this option to force all whois information to contain ascii-only data.
### Sometime whois information for IP addresses in China and other countries
### can contain non-ascii data.  If this option is enabled, then any non-
### ascii characters will be replaced with "NA".
psad_enable_whois_force_ascii: "N"

### This variable forces all whois lookups to be done against the source IP
### even when they are associated with a directly connected local network.  IT
### is usually a good idea to leave this setting as the default of 'N'.
psad_enable_whois_force_src_ip: "N"

### By default, enable reverse DNS lookups against scanning IP addresses.
psad_enable_dns_lookups: "Y"

### Set the number of times an ip can be seen before another dns
### lookup is issued.
psad_dns_lookup_threshold: "20"

### Enable psad to run an external script or program (use at your
### own risk!)
psad_enable_ext_script_exec: "N"

### Define an external program to run after a scan is caught.
### Note that the scan source ip can be specified on the command
### line to the external program through the use of the "SRCIP"
### string (along with some appropriate switch for the program).
### Of course this is only useful if the external program knows
### what to do with this information.
### Example:  EXTERNAL_SCRIPT       /path/to/script --ip SRCIP -v;
psad_external_script: "/bin/true"

### Control execution of EXTERNAL_SCRIPT (only once per IP, or
### every time a scan is detected for an ip).
psad_exec_ext_script_per_alert: "N"

### Enable psad to run an external script or program upon setting
### iptables block (use at your own risk!)
psad_enable_ext_block_script_exec: "N"

### Define an external program to run after a scan is blocked.
### Note that the scan source ip can be specified on the command
### line to the external program through the use of the "SRCIP"
### string (along with some appropriate switch for the program).
### Of course this is only useful if the external program knows
### what to do with this information.
### Example:  EXTERNAL_BLOCK_SCRIPT       /path/to/script --ip SRCIP -v;
psad_external_block_script: "/bin/true"

### Some syslog daemons support a customized time stamp, so allow
### a user-specified regex to account for this when necessary (disabled
### by default). This regex should also extract the hostname from the
### syslog messages as well, so the timestamp and the hostname should be
### stored in $1 and $2 respectively. Here is an example syslog message
### and how to extract the timestamp and hostname:
###     2015-03-08T02:25:11.444012+02:00 servername kernel: ...
### ...would be handled properly with:
###     ^\s*([\d\-]+T(?:\d{2}\:){2}\d{2}\S+)\s+(\S+)\s+kernel:
psad_enable_custom_syslog_ts_re: "N"
psad_custom_syslog_ts_re: '^\s*((?:\S+\s+){2}\S+)\s+(\S+)\s+kernel\:'

### Disk usage variables
psad_disk_check_interval: "300"  ### seconds

### This can be set to 0 to disable disk checking altogether
psad_disk_max_percentage: "95"

### This can be set to 0 to have psad not place any limit on the
### number of times it will attempt to remove data from
### /var/log/psad/.
psad_disk_max_rm_retries: "10"

### Enable archiving of old scan directories at psad startup.
psad_enable_scan_archive: "N"

### Truncate fwdata file at startup
psad_truncate_fwdata: "Y"

### Only archive scanning IP directories that have reached a danger
### level greater than or equal to this value.  Archiving old
### scanning ip directories only takes place at psad startup.
psad_min_archive_danger_level: "1"

### Email subject line config.  Change these prefixes if you want
### psad to generate email alerts that say something other than
### the following.
psad_mail_alert_prefix: "[psad-alert]"
psad_mail_status_prefix: "[psad-status]"
psad_mail_error_prefix: "[psad-error]"
psad_mail_fatal_prefix: "[psad-fatal]"

### URL for getting the latest psad signatures
psad_sig_update_url: "http://www.cipherdyne.org/psad/signatures"

### These next two are psadwatchd vars
psad_psadwatchd_check_interval: "5"  ### seconds
psad_psadwatchd_max_retries: "10"

### Directories
psad_install_root: "/"
psad_psad_dir: "$INSTALL_ROOT/var/log/psad"
psad_psad_run_dir: "$INSTALL_ROOT/var/run/psad"
psad_psad_fifo_dir: "$INSTALL_ROOT/var/lib/psad"
psad_psad_libs_dir: "$INSTALL_ROOT/usr/lib/psad"
psad_psad_conf_dir: "$INSTALL_ROOT/etc/psad"
psad_psad_err_dir: "$PSAD_DIR/errs"
psad_conf_archive_dir: "$PSAD_CONF_DIR/archive"
psad_scan_data_archive_dir: "$PSAD_DIR/scan_archive"
psad_analysis_mode_dir: "$PSAD_DIR/ipt_analysis"
psad_snort_rules_dir: "$PSAD_CONF_DIR/snort_rules"
psad_fwsnort_rules_dir: "/etc/fwsnort/snort_rules"  ### may not exist

### Files
psad_fw_data_file: "$PSAD_DIR/fwdata"
psad_ulog_data_file: "$PSAD_DIR/ulogd.log"
psad_fw_check_file: "$PSAD_DIR/fw_check"
psad_dshield_email_file: "$PSAD_DIR/dshield.email"
psad_sigs_file: "$PSAD_CONF_DIR/signatures"
psad_protocols_file: "$PSAD_CONF_DIR/protocols"
psad_icmp_types_file: "$PSAD_CONF_DIR/icmp_types"
psad_icmp6_types_file: "$PSAD_CONF_DIR/icmp6_types"
psad_auto_dl_file: "$PSAD_CONF_DIR/auto_dl"
psad_snort_rule_dl_file: "$PSAD_CONF_DIR/snort_rule_dl"
psad_posf_file: "$PSAD_CONF_DIR/posf"
psad_p0f_file: "$PSAD_CONF_DIR/pf.os"
psad_ip_opts_file: "$PSAD_CONF_DIR/ip_options"
psad_psad_fifo_file: "$PSAD_FIFO_DIR/psadfifo"
psad_etc_hosts_deny_file: "/etc/hosts.deny"
psad_etc_syslog_conf: "/etc/syslog.conf"
psad_etc_rsyslog_conf: "/etc/rsyslog.conf"
psad_etc_syslogng_conf: "/etc/syslog-ng/syslog-ng.conf"
psad_etc_metalog_conf: "/etc/metalog/metalog.conf"
psad_status_output_file: "$PSAD_DIR/status.out"
psad_analysis_output_file: "$PSAD_DIR/analysis.out"
psad_install_log_file: "$PSAD_DIR/install.log"

### PID files
psad_psad_pid_file: "$PSAD_RUN_DIR/psad.pid"
psad_psad_fw_read_pid_file: "$PSAD_RUN_DIR/psad_fw_read.pid"
psad_psad_cmdline_file: "$PSAD_RUN_DIR/psad.cmd"
psad_kmsgsd_pid_file: "$PSAD_RUN_DIR/kmsgsd.pid"
psad_psadwatchd_pid_file: "$PSAD_RUN_DIR/psadwatchd.pid"

### List of ips that have been auto blocked by iptables
### or tcpwrappers (the auto blocking feature is disabled by
### default, see the psad man page and the ENABLE_AUTO_IDS
### variable).
psad_auto_block_ipt_file: "$PSAD_DIR/auto_blocked_iptables"
psad_auto_block_tcpwr_file: "$PSAD_DIR/auto_blocked_tcpwr"

### File used internally by psad to add iptables blocking
### rules to a running psad process
psad_auto_ipt_sock: "$PSAD_RUN_DIR/auto_ipt.sock"

psad_fw_error_log: "$PSAD_ERR_DIR/fwerrorlog"
psad_print_scan_hash: "$PSAD_DIR/scan_hash"

### /proc interface for controlling ip forwarding
psad_proc_forward_file: "/proc/sys/net/ipv4/ip_forward"

### Packet counters for tcp, udp, and icmp protocols
psad_packet_counter_file: "$PSAD_DIR/packet_ctr"

### Top scanned ports
psad_top_scanned_ports_file: "$PSAD_DIR/top_ports"

### Top signature matches
psad_top_sigs_file: "$PSAD_DIR/top_sigs"

### Top attackers
psad_top_attackers_file: "$PSAD_DIR/top_attackers"

### Counter file for Dshield alerts
psad_dshield_counter_file: "$PSAD_DIR/dshield_ctr"

### Counter file for iptables prefixes
psad_ipt_prefix_counter_file: "$PSAD_DIR/ipt_prefix_ctr"

### iptables command output and error collection files; these are
### used by IPTables::ChainMgr
psad_ipt_output_pattern: "psad_iptout.XXXXXX"
psad_ipt_error_pattern: "psad_ipterr.XXXXXX"

### system binaries
psad_iptablescmd: "/sbin/iptables"
psad_ip6tablescmd: "/sbin/ip6tables"
psad_ipsetcmd: "/sbin/ipset"
psad_shcmd: "/bin/sh"
psad_wgetcmd: "/usr/bin/wget"
psad_gzipcmd: "/bin/gzip"
psad_mknodcmd: "/bin/mknod"
psad_pscmd: "/bin/ps"
psad_mailcmd: "/bin/mail"
psad_sendmailcmd: "/usr/sbin/sendmail"
psad_ifconfigcmd: "/sbin/ifconfig"
psad_ipcmd: "/sbin/ip"
psad_killallcmd: "/usr/bin/killall"
psad_netstatcmd: "/bin/netstat"
psad_unamecmd: "/bin/uname"
psad_whoiscmd: "$INSTALL_ROOT/usr/bin/whois_psad"
psad_dfcmd: "/bin/df"
psad_fwcheck_psadcmd: "$INSTALL_ROOT/usr/sbin/fwcheck_psad"
psad_psadwatchdcmd: "$INSTALL_ROOT/usr/sbin/psadwatchd"
psad_kmsgsdcmd: "$INSTALL_ROOT/usr/sbin/kmsgsd"
psad_psadcmd: "$INSTALL_ROOT/usr/sbin/psad"
